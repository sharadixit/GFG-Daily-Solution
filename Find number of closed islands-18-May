class Solution {
    public:
    void fun(vector<vector<int>> &matrix,vector<vector<int>> &v ,int n, int m,int i, int j,int &flag)
    {
       if(i>=n||j>=m||i<0||j<0||matrix[i][j]==0||v[i][j]==1)
       return;
       if(matrix[i][j]==1)
       {
           if(i==n-1||j==m-1||i==0||j==0)
           { 
               flag=1;
               return;
           }
       }
       v[i][j]=1;
      fun(matrix,v,n,m,i+1,j,flag);
      fun(matrix,v,n,m,i-1,j,flag);
      fun(matrix,v,n,m,i,j+1,flag);
      fun(matrix,v,n,m,i,j-1,flag);
       
    }
    int closedIslands(vector<vector<int>>& matrix, int n, int m) {
       int i,j;
       vector<vector<int>> v(n,vector<int>(m,0));
       int count=0;
       for(i=0;i<n;i++)
       {
           for(j=0;j<m;j++)
           {
               if(v[i][j]==0&&matrix[i][j]==1)
               {
                   int flag=0;
                   fun(matrix,v,n,m,i,j,flag);
                   if(flag==0)
                   count++;
               }
           }
       }
       return count;
    }
};
